name: ci

on:
  push:
    branches:
      - main

defaults:
  run:
    working-directory: ./web

jobs:
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies 📦
        run: pnpm install

      - name: Run linter 👀
        run: yarn lint

      - name: Run tests 🧪
        run: yarn test

      - name: Debug 🐛
        run: echo GITHUB_SHA=${GITHUB_SHA}

      - name: Build 🏗️
        run: mv .env.production .env && echo GITHUB_SHA=${GITHUB_SHA} >> .env && pnpm run generate

      - name: Cloudflare Deploy 🚀
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: httpsms
          directory: web/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Firebase Deploy 🚀
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          channelId: live
          entryPoint: "./web"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_HTTPSMS_86C51 }}"
          projectId: httpsms-86c51
